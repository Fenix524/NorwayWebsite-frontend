import axiosInstance from "./axios";
import { toast } from "react-toastify";

const showSuccessToast = (message) => {
  toast.success(message);
};

const showErrorToast = (message) => {
  toast.error(message);
};

// –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ –¥–æ —Ä–µ—Å—É—Ä—Å—ñ–≤ landmark
export const getAllLandmarks = async () => {
  try {
    const response = await axiosInstance.get(`/landmarks`);
    console.log(response.data);
    return response.data;
  } catch (error) {
    showErrorToast("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å–ø–∏—Å–∫—É –ø–∞–º'—è—Ç–æ–∫ üòï");
    console.error("Error fetching all landmarks", error);
    throw error;
  }
};

export const getOneLandmark = async (id) => {
  try {
    const response = await axiosInstance.get(`/landmarks/${id}`);
    return response.data;
  } catch (error) {
    showErrorToast("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–∞–º'—è—Ç–∫–∏ üòï");
    console.error("Error fetching landmark", error);
    throw error;
  }
};

export const createLandmark = async (landmarkData) => {
  try {
    const response = await axiosInstance.post(`/landmarks`, landmarkData);
    showSuccessToast("–ü–∞–º'—è—Ç–∫—É —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ! üòä");
    return response.data;
  } catch (error) {
    showErrorToast("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –ø–∞–º'—è—Ç–∫–∏ üòï");
    console.error("Error creating landmark", error);
    throw error;
  }
};

export const updateLandmark = async (id, landmarkData) => {
  try {
    const response = await axiosInstance.put(`/landmarks/${id}`, landmarkData);
    showSuccessToast("–ü–∞–º'—è—Ç–∫—É —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ! üòä");
    return response.data;
  } catch (error) {
    showErrorToast("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø–∞–º'—è—Ç–∫–∏ üòï");
    console.error("Error updating landmark", error);
    throw error;
  }
};

export const deleteLandmark = async (id) => {
  try {
    const response = await axiosInstance.delete(`/landmarks/${id}`);
    showSuccessToast("–ü–∞–º'—è—Ç–∫—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ! üóëÔ∏è");
    return response.data;
  } catch (error) {
    showErrorToast("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –ø–∞–º'—è—Ç–∫–∏ üòï");
    console.error("Error deleting landmark", error);
    throw error;
  }
};
