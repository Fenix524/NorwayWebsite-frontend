import { toast } from "react-toastify";
import axiosInstance from "./axios";

const showSuccessToast = (message) => {
  toast.success(message);
};

const showErrorToast = (message) => {
  toast.error(message);
};

const showInfoToast = (message) => {
  toast.info(message);
};

// –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ –¥–æ —Ä–µ—Å—É—Ä—Å—ñ–≤ –∑–∞–∫–ª–∞–¥–æ–∫
export const getAllBookmarks = async () => {
  try {
    const response = await axiosInstance.get(`/bookmarks`);
    return response.data;
  } catch (error) {
    console.error("Error fetching all bookmarks", error);
    throw error;
  }
};

export const getOneBookmark = async () => {
  try {
    const response = await axiosInstance.get(`/bookmarks/me`);
    return response.data;
  } catch (error) {
    console.error("Error fetching bookmark", error);
    throw error;
  }
};

export const togleBookmarks = async (pageId) => {
  try {
    const response = await axiosInstance.put(`/bookmarks/${pageId}`);
    return response.data;
  } catch (error) {
    if (error.response.status === 401) {
      showInfoToast("–¶—è —Ñ—É–Ω–∫—Ü—ñ—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º!");
    }
    console.error("Error adding to bookmarks", error);
    throw error;
  }
};
export const addToBookmarks = async (pageId) => {
  try {
    const response = await axiosInstance.post(`/bookmarks`, { pageId });
    showSuccessToast("–ó–∞–∫–ª–∞–¥–∫—É —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ! üòä");
    return response.data;
  } catch (error) {
    showErrorToast("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –¥–æ –∑–∞–∫–ª–∞–¥–æ–∫ üòï");
    console.error("Error adding to bookmarks", error);
    throw error;
  }
};

export const removeFromBookmarks = async (id) => {
  try {
    const response = await axiosInstance.delete(`/bookmarks/${id}`);
    showSuccessToast("–ó–∞–∫–ª–∞–¥–∫—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ! üóëÔ∏è");
    return response.data;
  } catch (error) {
    showErrorToast("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∑ –∑–∞–∫–ª–∞–¥–æ–∫ üòï");
    console.error("Error removing from bookmarks", error);
    throw error;
  }
};
